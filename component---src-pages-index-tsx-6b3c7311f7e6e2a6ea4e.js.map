{"version":3,"file":"component---src-pages-index-tsx-6b3c7311f7e6e2a6ea4e.js","mappings":"yOAuEA,UA9DuCA,KACrC,MAAM,EAACC,EAAO,EAAEC,IAAcC,EAAAA,EAAAA,UAAmB,KAC3C,iBAAEC,EAAgB,QAAEC,EAAO,QAAEC,EAAO,WAAEC,EAAU,mBAAEC,IAAuBC,EAAAA,EAAAA,MAE/EC,EAAAA,EAAAA,YAAU,KACUC,WAChB,IAAKN,EAAS,OACd,MAAMJ,QAAgBI,EAAQ,WACjB,IAAAO,EAATX,GAEFC,EAA0B,QAAhBU,EAACX,EAAQY,eAAO,IAAAD,EAAAA,EAAI,GAChC,EAEFE,EAAW,GACV,IAEH,MAcMC,EAAgBC,IACfT,IACLA,EAAWS,EAAO,WAClBd,GAAYe,GAASA,EAAKC,QAAQC,GAASA,IAASH,MAAO,EAU7D,OACEI,EAAAA,cAAA,QAAMC,UAAU,gDACdD,EAAAA,cAAA,OAAKC,UAAU,sBACbD,EAAAA,cAACE,EAAAA,GAAkB,CAACC,MAAM,mBAAmBC,SAAS,UAAUC,OAVlDC,IACdlB,IACFN,EAAWwB,GACXlB,EAAmBkB,EAAQ,WAC7B,IAOIN,EAAAA,cAACO,EAAAA,GAAe,CAACC,UA/BAC,IACrB,MAAMC,GAASC,EAAAA,EAAAA,GAAY9B,EAAS4B,GAChCC,GAAUtB,IACZN,EAAW4B,GACXtB,EAAmBsB,EAAQ,WAC7B,GA2BMV,EAAAA,cAACY,EAAAA,GAAa,CAACC,gBAAgB,SAC5BhC,EAAQiC,KAAI,CAACC,EAAMC,IAClBhB,EAAAA,cAACiB,EAAAA,GAAI,CAACC,IAAKH,EAAMI,OAAQJ,EAAMK,MAAOJ,EAAGK,SAAU1B,QAIzDK,EAAAA,cAAA,UAAQG,MAAM,WAAWF,UAAU,kIAAkIqB,QA9BzJ/B,UAChB,IAAKL,EAAS,OACd,MAAMqC,QAAcrC,EAAQ,WAC5BJ,GAAYe,GAAI,GAAA2B,QAAAC,EAAAA,EAAAA,GAAS5B,GAAI,CAAE0B,KAAO,GA4BhCvB,EAAAA,cAAC0B,EAAAA,IAAQ,CAACzB,UAAU,sBAGnB,EAMJ,MAAM0B,EAAeA,IAAM3B,EAAAA,cAAA,aAAO,O","sources":["webpack://my-gatsby-site/./src/pages/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport type { HeadFC, PageProps } from \"gatsby\";\nimport { Todo, PageHeaderControls, TodoContainer } from \"../components\";\nimport { DragDropContext, DropResult, Droppable } from \"react-beautiful-dnd\";\nimport { IoIosAdd } from \"react-icons/io\";\nimport initalData from \"../misc/initalData.ts\";\nimport { moveItemDND, generateUID } from \"../utils\";\nimport { useIndexedDB } from \"../context/IndexedDBContext.tsx\";\n\nconst IndexPage: React.FC<PageProps> = () => {\n  const [mainIds, setMainIds] = useState<string[]>([]);\n  const { getChildrenTodos, getTodo, addTodo, deleteTodo, updateTodoPosition } = useIndexedDB();\n\n  useEffect(() => {\n    const initTodos = async () => {\n      if (!getTodo) return;\n      const mainIds = await getTodo(\"mainIds\");\n      if (mainIds) {\n        // console.log(\"BANG\", mainIds);\n        setMainIds(mainIds.todoIds ?? []);\n      }\n    };\n    initTodos();\n  }, []);\n\n  const handleDragEnd = (result: DropResult) => {\n    const newArr = moveItemDND(mainIds, result);\n    if (newArr && updateTodoPosition) {\n      setMainIds(newArr);\n      updateTodoPosition(newArr, \"mainIds\");\n    }\n  };\n\n  const handleAdd = async () => {\n    if (!addTodo) return;\n    const newId = await addTodo(\"mainIds\");\n    setMainIds((mIds) => [...mIds, newId]);\n  };\n\n  const handleDelete = (delId: string) => {\n    if (!deleteTodo) return;\n    deleteTodo(delId, \"mainIds\");\n    setMainIds((mIds) => mIds.filter((item) => item !== delId));\n  };\n\n  const handleSort = (newIds: string[]) => {\n    if (updateTodoPosition) {\n      setMainIds(newIds);\n      updateTodoPosition(newIds, \"mainIds\");\n    }\n  };\n\n  return (\n    <main className=\"mt-large lg:mt-one px-2xsmall lg:px-0 w-full\">\n      <div className=\"mx-auto max-w-four\">\n        <PageHeaderControls title=\"<h3>To do's</h3>\" parentId=\"mainIds\" onSort={handleSort} />\n        <DragDropContext onDragEnd={handleDragEnd}>\n          <TodoContainer todoContainerId=\"index\">\n            {mainIds.map((todo, i) => (\n              <Todo key={todo} todoId={todo} index={i} onDelete={handleDelete} />\n            ))}\n          </TodoContainer>\n        </DragDropContext>\n        <button title=\"Add Todo\" className=\"max-w-four mt-2xsmall add-btn-style flex items-center justify-center w-full h-small cursor-pointer opacity-80 hover:opacity-100\" onClick={handleAdd}>\n          <IoIosAdd className=\"w-small h-small\" />\n        </button>\n      </div>\n    </main>\n  );\n};\n\nexport default IndexPage;\n\nexport const Head: HeadFC = () => <title>Home</title>;\n"],"names":["IndexPage","mainIds","setMainIds","useState","getChildrenTodos","getTodo","addTodo","deleteTodo","updateTodoPosition","useIndexedDB","useEffect","async","_mainIds$todoIds","todoIds","initTodos","handleDelete","delId","mIds","filter","item","React","className","PageHeaderControls","title","parentId","onSort","newIds","DragDropContext","onDragEnd","result","newArr","moveItemDND","TodoContainer","todoContainerId","map","todo","i","Todo","key","todoId","index","onDelete","onClick","newId","concat","_toConsumableArray","IoIosAdd","Head"],"sourceRoot":""}