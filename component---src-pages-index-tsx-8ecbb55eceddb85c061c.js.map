{"version":3,"file":"component---src-pages-index-tsx-8ecbb55eceddb85c061c.js","mappings":"mPA6EA,UAnEuCA,KACrC,MAAM,EAACC,EAAO,EAAEC,IAAcC,EAAAA,EAAAA,UAAmB,KAC3C,iBAAEC,EAAgB,QAAEC,EAAO,QAAEC,EAAO,WAAEC,EAAU,mBAAEC,IAAuBC,EAAAA,EAAAA,MAE/EC,EAAAA,EAAAA,YAAU,KACUC,WAChB,IAAKN,EAAS,OACd,MAAMJ,QAAgBI,EAAQ,WACjB,IAAAO,EAATX,GAEFC,EAA0B,QAAhBU,EAACX,EAAQY,eAAO,IAAAD,EAAAA,EAAI,GAChC,EAEFE,EAAW,GACV,IAEH,MAcMC,EAAgBC,IACfT,IACLA,EAAWS,EAAO,WAClBd,GAAYe,GAASA,EAAKC,QAAQC,GAASA,IAASH,MAAO,EAU7D,OACEI,EAAAA,cAAAA,EAAAA,SAAA,KACAA,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAAA,aAAO,cAEPA,EAAAA,cAAA,QAAME,UAAU,gDACdF,EAAAA,cAAA,OAAKE,UAAU,sBACbF,EAAAA,cAACG,EAAAA,GAAkB,CAACC,MAAM,mBAAmBC,SAAS,UAAUC,OAdpDC,IACdnB,IACFN,EAAWyB,GACXnB,EAAmBmB,EAAQ,WAC7B,IAWMP,EAAAA,cAACQ,EAAAA,GAAe,CAACC,UAnCFC,IACrB,MAAMC,GAASC,EAAAA,EAAAA,GAAY/B,EAAS6B,GAChCC,GAAUvB,IACZN,EAAW6B,GACXvB,EAAmBuB,EAAQ,WAC7B,GA+BQX,EAAAA,cAACa,EAAAA,GAAa,CAACC,gBAAgB,SAC5BjC,EAAQkC,KAAI,CAACC,EAAMC,IAClBjB,EAAAA,cAACkB,EAAAA,GAAI,CAACC,IAAKH,EAAMI,OAAQJ,EAAMK,MAAOJ,EAAGK,SAAU3B,QAIzDK,EAAAA,cAAA,UAAQI,MAAM,WAAWF,UAAU,kIAAkIqB,QAlC3JhC,UAChB,IAAKL,EAAS,OACd,MAAMsC,QAActC,EAAQ,WAC5BJ,GAAYe,GAAI,GAAA4B,QAAAC,EAAAA,EAAAA,GAAS7B,GAAI,CAAE2B,KAAO,GAgC9BxB,EAAAA,cAAC2B,EAAAA,IAAQ,CAACzB,UAAU,uBAIzB,EAMA,MAAM0B,EAAeA,IAAM5B,EAAAA,cAAA,aAAO,Y","sources":["webpack://my-gatsby-site/./src/pages/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport type { HeadFC, PageProps } from \"gatsby\";\nimport { Todo, PageHeaderControls, TodoContainer } from \"../components\";\nimport { DragDropContext, DropResult, Droppable } from \"react-beautiful-dnd\";\nimport { IoIosAdd } from \"react-icons/io\";\nimport initalData from \"../misc/initalData.ts\";\nimport { moveItemDND, generateUID } from \"../utils\";\nimport { useIndexedDB } from \"../context/IndexedDBContext.tsx\";\nimport { Helmet } from \"react-helmet\";\n\nconst IndexPage: React.FC<PageProps> = () => {\n  const [mainIds, setMainIds] = useState<string[]>([]);\n  const { getChildrenTodos, getTodo, addTodo, deleteTodo, updateTodoPosition } = useIndexedDB();\n\n  useEffect(() => {\n    const initTodos = async () => {\n      if (!getTodo) return;\n      const mainIds = await getTodo(\"mainIds\");\n      if (mainIds) {\n        // console.log(\"BANG\", mainIds);\n        setMainIds(mainIds.todoIds ?? []);\n      }\n    };\n    initTodos();\n  }, []);\n\n  const handleDragEnd = (result: DropResult) => {\n    const newArr = moveItemDND(mainIds, result);\n    if (newArr && updateTodoPosition) {\n      setMainIds(newArr);\n      updateTodoPosition(newArr, \"mainIds\");\n    }\n  };\n\n  const handleAdd = async () => {\n    if (!addTodo) return;\n    const newId = await addTodo(\"mainIds\");\n    setMainIds((mIds) => [...mIds, newId]);\n  };\n\n  const handleDelete = (delId: string) => {\n    if (!deleteTodo) return;\n    deleteTodo(delId, \"mainIds\");\n    setMainIds((mIds) => mIds.filter((item) => item !== delId));\n  };\n\n  const handleSort = (newIds: string[]) => {\n    if (updateTodoPosition) {\n      setMainIds(newIds);\n      updateTodoPosition(newIds, \"mainIds\");\n    }\n  };\n\n  return (\n    <>\n    <Helmet>\n      <title>To Do App</title>\n    </Helmet>\n      <main className=\"mt-large lg:mt-one px-2xsmall lg:px-0 w-full\">\n        <div className=\"mx-auto max-w-four\">\n          <PageHeaderControls title=\"<h3>To do's</h3>\" parentId=\"mainIds\" onSort={handleSort} />\n          <DragDropContext onDragEnd={handleDragEnd}>\n            <TodoContainer todoContainerId=\"index\">\n              {mainIds.map((todo, i) => (\n                <Todo key={todo} todoId={todo} index={i} onDelete={handleDelete} />\n              ))}\n            </TodoContainer>\n          </DragDropContext>\n          <button title=\"Add Todo\" className=\"max-w-four mt-2xsmall add-btn-style flex items-center justify-center w-full h-small cursor-pointer opacity-80 hover:opacity-100\" onClick={handleAdd}>\n            <IoIosAdd className=\"w-small h-small\" />\n          </button>\n        </div>\n      </main>\n    </>\n  );\n};\n\nexport default IndexPage;\n\nexport const Head: HeadFC = () => <title>To Do App</title>;\n"],"names":["IndexPage","mainIds","setMainIds","useState","getChildrenTodos","getTodo","addTodo","deleteTodo","updateTodoPosition","useIndexedDB","useEffect","async","_mainIds$todoIds","todoIds","initTodos","handleDelete","delId","mIds","filter","item","React","Helmet","className","PageHeaderControls","title","parentId","onSort","newIds","DragDropContext","onDragEnd","result","newArr","moveItemDND","TodoContainer","todoContainerId","map","todo","i","Todo","key","todoId","index","onDelete","onClick","newId","concat","_toConsumableArray","IoIosAdd","Head"],"sourceRoot":""}